//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""3d1aaed0-c26c-404c-80e5-cf5350497e04"",
            ""actions"": [
                {
                    ""name"": ""Player1Movement"",
                    ""type"": ""Value"",
                    ""id"": ""95ed6481-673c-487a-9f04-f0e4625480df"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player2Movement"",
                    ""type"": ""Value"",
                    ""id"": ""2e3e7db7-3dbd-47b0-8cf7-91eab0cb2742"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player1Serve"",
                    ""type"": ""Button"",
                    ""id"": ""891633ab-f064-459d-b084-0652bd2d0b21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2Serve"",
                    ""type"": ""Button"",
                    ""id"": ""b0014e98-5230-4817-ba00-f7e871b8c226"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""90acc714-c897-429d-8168-d067d3917a0b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ee9592ac-0911-40e3-9c82-92c83a29e294"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""28ef2b1a-9e3a-4394-880a-4876c178a287"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1c0e5a46-7743-4b7c-943b-24cf63cb04d2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""09387a62-f4a4-4df2-9c88-1117d1cc8df7"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""303be5cd-212e-4717-8f26-9558049d8e03"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Serve"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""05e8b2cb-4709-4819-980f-d5bba70e4e4a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3b27467c-73c9-4c02-aa19-793b7ef43740"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""09c74da3-a7fd-4865-a7d4-606079463202"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f467f235-2c96-471c-913c-24e55e2bb383"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5ce8e1d1-84f5-40c3-b21a-8b4e4140a2d3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""af206d51-3ec3-4261-b291-54365458ac5b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Serve"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_Player1Movement = m_Default.FindAction("Player1Movement", throwIfNotFound: true);
        m_Default_Player2Movement = m_Default.FindAction("Player2Movement", throwIfNotFound: true);
        m_Default_Player1Serve = m_Default.FindAction("Player1Serve", throwIfNotFound: true);
        m_Default_Player2Serve = m_Default.FindAction("Player2Serve", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default
    private readonly InputActionMap m_Default;
    private List<IDefaultActions> m_DefaultActionsCallbackInterfaces = new List<IDefaultActions>();
    private readonly InputAction m_Default_Player1Movement;
    private readonly InputAction m_Default_Player2Movement;
    private readonly InputAction m_Default_Player1Serve;
    private readonly InputAction m_Default_Player2Serve;
    public struct DefaultActions
    {
        private @PlayerControls m_Wrapper;
        public DefaultActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Player1Movement => m_Wrapper.m_Default_Player1Movement;
        public InputAction @Player2Movement => m_Wrapper.m_Default_Player2Movement;
        public InputAction @Player1Serve => m_Wrapper.m_Default_Player1Serve;
        public InputAction @Player2Serve => m_Wrapper.m_Default_Player2Serve;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Add(instance);
            @Player1Movement.started += instance.OnPlayer1Movement;
            @Player1Movement.performed += instance.OnPlayer1Movement;
            @Player1Movement.canceled += instance.OnPlayer1Movement;
            @Player2Movement.started += instance.OnPlayer2Movement;
            @Player2Movement.performed += instance.OnPlayer2Movement;
            @Player2Movement.canceled += instance.OnPlayer2Movement;
            @Player1Serve.started += instance.OnPlayer1Serve;
            @Player1Serve.performed += instance.OnPlayer1Serve;
            @Player1Serve.canceled += instance.OnPlayer1Serve;
            @Player2Serve.started += instance.OnPlayer2Serve;
            @Player2Serve.performed += instance.OnPlayer2Serve;
            @Player2Serve.canceled += instance.OnPlayer2Serve;
        }

        private void UnregisterCallbacks(IDefaultActions instance)
        {
            @Player1Movement.started -= instance.OnPlayer1Movement;
            @Player1Movement.performed -= instance.OnPlayer1Movement;
            @Player1Movement.canceled -= instance.OnPlayer1Movement;
            @Player2Movement.started -= instance.OnPlayer2Movement;
            @Player2Movement.performed -= instance.OnPlayer2Movement;
            @Player2Movement.canceled -= instance.OnPlayer2Movement;
            @Player1Serve.started -= instance.OnPlayer1Serve;
            @Player1Serve.performed -= instance.OnPlayer1Serve;
            @Player1Serve.canceled -= instance.OnPlayer1Serve;
            @Player2Serve.started -= instance.OnPlayer2Serve;
            @Player2Serve.performed -= instance.OnPlayer2Serve;
            @Player2Serve.canceled -= instance.OnPlayer2Serve;
        }

        public void RemoveCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    public interface IDefaultActions
    {
        void OnPlayer1Movement(InputAction.CallbackContext context);
        void OnPlayer2Movement(InputAction.CallbackContext context);
        void OnPlayer1Serve(InputAction.CallbackContext context);
        void OnPlayer2Serve(InputAction.CallbackContext context);
    }
}
